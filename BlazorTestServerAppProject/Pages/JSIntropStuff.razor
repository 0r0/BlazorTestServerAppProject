@page "/interop"
@using BlazorTestServerAppProject.Helpers
@inject IJSRuntime JsRunTime
<h1>JSIntropStuff</h1>
<h3>create alert</h3>
<button class="btn btn-success" @onclick="ShowAlert">show alert</button>
<h3>ask me a question</h3>
<input @bind="questionText" />
<button class="btn btn-warning" @onclick="AskQuestion" >ask question</button>
<div>
    the answer was:<span id="answerSpan"></span>
</div>
<h3>please focus</h3>
<input @ref="InputToFocus"/>
<button class="btn btn-danger" @onclick="Focus">Focus!</button>
<h3>give me a random int</h3>
<div>
    The random number is:<span id="randomNumberSpan"></span>
</div>
<div>
    The random number is:<span id="randomNumberSpan2"></span>
</div>
<button class="btn btn-info" onclick="giveMeRandomInt(100)" >Randomize!</button>
<button class="btn btn-info" @onclick="GenerateRandom" >Randomize2!</button>

@code {
    string questionText = string.Empty;
    ElementReference InputToFocus;
    async Task AskQuestion()
    {
        var response=await JsRunTime.InvokeAsync<string>("createPrompt",questionText);
        await JsRunTime.InvokeVoidAsync("setElementTextById", "answerSpan",response);
    }
    async Task ShowAlert()
    {
        await JsRunTime.InvokeVoidAsync("createAlert");
    }
    async Task Focus()
    {
        await JsRunTime.InvokeVoidAsync("focusOnElement", InputToFocus); 
    }
    async Task GenerateRandom()
    {
        await JsRunTime.InvokeVoidAsync("giveMeRandomInt2",500,DotNetObjectReference.Create(new RandomHelper()));
    }
   

}
